[{"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\index.js":"1","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\App.js":"2","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\NotFound.js":"3","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\home\\Home.js":"4","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\header\\Header.js":"5","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\profile\\Profile.js":"6","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\about\\About.js":"7","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\AuthMain.js":"8","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\PrivateRoute.js":"9","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\review\\Review.js":"10","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\Landing\\Landing.js":"11","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\SearchResult\\SearchResult.js":"12","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\Destinations\\Destination.js":"13","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\contexts\\AuthContext.js":"14","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\firebase.js":"15","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\Signin.js":"16","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\Signup.js":"17","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\SearchResult\\ButtonIncrement.js":"18"},{"size":320,"mtime":1611589359693,"results":"19","hashOfConfig":"20"},{"size":1868,"mtime":1611818294424,"results":"21","hashOfConfig":"20"},{"size":22297,"mtime":1611589359684,"results":"22","hashOfConfig":"20"},{"size":7630,"mtime":1611818294427,"results":"23","hashOfConfig":"20"},{"size":2058,"mtime":1611589359688,"results":"24","hashOfConfig":"20"},{"size":6865,"mtime":1611816844184,"results":"25","hashOfConfig":"20"},{"size":2235,"mtime":1611589359686,"results":"26","hashOfConfig":"20"},{"size":782,"mtime":1611589359687,"results":"27","hashOfConfig":"20"},{"size":438,"mtime":1611589359687,"results":"28","hashOfConfig":"20"},{"size":2167,"mtime":1611603863616,"results":"29","hashOfConfig":"20"},{"size":997,"mtime":1611669510845,"results":"30","hashOfConfig":"20"},{"size":6733,"mtime":1611589359685,"results":"31","hashOfConfig":"20"},{"size":1015,"mtime":1611822806231,"results":"32","hashOfConfig":"20"},{"size":1039,"mtime":1611589359692,"results":"33","hashOfConfig":"20"},{"size":657,"mtime":1611589359692,"results":"34","hashOfConfig":"20"},{"size":1889,"mtime":1611589359687,"results":"35","hashOfConfig":"20"},{"size":2322,"mtime":1611589359688,"results":"36","hashOfConfig":"20"},{"size":852,"mtime":1611589359684,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1p1e19c",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\index.js",[],["78","79"],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\App.js",["80"],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\NotFound.js",[],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\home\\Home.js",["81","82"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Accordion,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  CardColumns,\r\n} from \"react-bootstrap\";\r\nimport firestore from \"../../firebase\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  const [schedules, setSchedules] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [stations, setStations] = useState([]);\r\n\r\n  const searchNameRef = useRef();\r\n\r\n  const [state, toggle] = useState(true);\r\n  const { x } = useSpring({\r\n    from: { x: 0 },\r\n    x: state ? 1 : 0,\r\n    config: { duration: 1000 },\r\n  });\r\n\r\n  const onChange = (dates) => {\r\n    const [start, end] = dates;\r\n    setStartDate(start);\r\n    setEndDate(end);\r\n  };\r\n\r\n  const ref = firestore.firestore().collection(\"TrainSchdule\");\r\n  const Stations = firestore.firestore().collection(\"stations\");\r\n  const citiesRef = firestore.firestore().collection(\"schedules\");\r\n\r\n  async function getSchedules() {\r\n    setLoading(true);\r\n    await ref.limit(12).onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(doc.data());\r\n      });\r\n      console.log(items);\r\n      setSchedules(items);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  async function fetchStations() {\r\n    setLoading(true);\r\n    await Stations.orderBy(\"name\").onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(doc.data());\r\n      });\r\n      setStations(items);\r\n      setLoading(false);\r\n      console.log(items);\r\n    });\r\n  }\r\n\r\n  async function handleSearch(e) {\r\n    await ref\r\n      .where(\"StartStation\", \"==\", searchNameRef.current.value)\r\n      .limit(12)\r\n      .onSnapshot((querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n        });\r\n        console.log(items);\r\n        setSchedules(items);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSchedules();\r\n    fetchStations();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-screen\">\r\n        <h2>Loading Content of Home Page...</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"justify-content-md-center\">\r\n      <h2 className=\"topic mt-4\">Plan Your Journey With Us</h2>\r\n      <div>\r\n        <animated.div\r\n          style={{\r\n            transform: x\r\n              .interpolate({\r\n                range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\r\n                output: [1, 0.97, 0.9, 1, 1.1, 1.03, 1],\r\n              })\r\n              .interpolate((x) => `scale(${x})`),\r\n          }}\r\n        >\r\n          <Accordion className=\"mb-4 mt-4 search\">\r\n            <Card className=\"search\">\r\n              <Accordion.Toggle\r\n                onClick={() => toggle(!state)}\r\n                as={Card.Header}\r\n                eventKey=\"0\"\r\n              >\r\n                <SearchIcon className=\"search_inputIcon\" />{\" \"}\r\n                <b>Let's find you a Train ...</b>\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  <Form onSubmit={handleSearch}>\r\n                    <Row>\r\n                      <Col lg={3} className=\"pl-4\">\r\n                        <Form.Group id=\"date\">\r\n                          <Form.Label>Date:</Form.Label>\r\n                          <br />\r\n                          <DatePicker\r\n                            className=\"datePicker lg-4\"\r\n                            selected={startDate}\r\n                            onChange={onChange}\r\n                            dateFormat=\"dd-MMM-yyyy\"\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            minDate={new Date()}\r\n                            selectsRange\r\n                            inline\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col\r\n                        lg={9}\r\n                        className=\"justify-content-center center-block\"\r\n                      >\r\n                        <Row>\r\n                          <Col lg={6}>\r\n                            <Form.Group id=\"from\">\r\n                              <Form.Label>From:</Form.Label>\r\n                              <select\r\n                                class=\"form-control\"\r\n                                id=\"fromStationSelect\"\r\n                              >\r\n                                {stations.map((station) => (\r\n                                  <option\r\n                                    key={station.name}\r\n                                    value={station.name}\r\n                                  >\r\n                                    {station.name}\r\n                                  </option>\r\n                                ))}\r\n                              </select>\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col lg={6}>\r\n                            <Form.Group id=\"to\">\r\n                              <Form.Label>To:</Form.Label>\r\n                              <select\r\n                                class=\"form-control\"\r\n                                id=\"fromStationSelect\"\r\n                              >\r\n                                {stations.map((station) => (\r\n                                  <option\r\n                                    key={station.name}\r\n                                    value={station.name}\r\n                                  >\r\n                                    {station.name}\r\n                                  </option>\r\n                                ))}\r\n                              </select>\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        </animated.div>\r\n      </div>\r\n      <div className=\"pt-4\">\r\n        <h2 className=\"train-list\">Available Trains for you</h2>\r\n      </div>\r\n\r\n      <div className=\"justify-content-md-center\">\r\n        <CardColumns>\r\n          {schedules.map((schedule) => (\r\n            <Card\r\n              key={schedule.id}\r\n              className=\"mt-2 hover-shadow-sm bg-white rounded col-md train-schedule\"\r\n              \r\n            >\r\n              <Card.Body>\r\n                <Card.Title>{schedule.TrainName}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {schedule.StartStation} to {schedule.EndStation}\r\n                </Card.Subtitle>\r\n                <Card.Text>\r\n                  Start Time: {schedule.ArrivalStation} hrs\r\n                  <br />\r\n                  End Time: {schedule.ArrivalDestination} hrs\r\n                  <br />\r\n                  Available Classes: {schedule.Classes}\r\n                </Card.Text>\r\n                <Button variant=\"outline-warning\">Reserve Now</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </CardColumns>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\header\\Header.js",[],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\profile\\Profile.js",["83","84","85"],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\about\\About.js",[],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\AuthMain.js",[],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\PrivateRoute.js",[],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\review\\Review.js",["86"],"import React, { useEffect, useState } from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\r\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport \"./Review.css\";\r\nimport firestore from \"../../firebase\";\r\nfunction Review() {\r\n  const ref = firestore.firestore().collection(\"Review\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [Review, setReview] = useState([]);\r\n\r\n  function getReview() {\r\n    setLoading(true);\r\n    ref.onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(doc.data());\r\n      });\r\n      setReview(items);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getReview();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return  <div className=\"loading-screen\">\r\n    <h2>Loading Content of Review Page...</h2>\r\n  </div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"body-review\">\r\n      <div className=\"search-body\">\r\n        <div className=\" search_input\">\r\n          <SearchIcon className=\"search_inputIcon\" />\r\n          <input placeholder=\"Review\" />\r\n\r\n          <ArrowForwardIcon type=\"submit\" className=\"search_inputIcon\" />\r\n        </div>\r\n      </div>\r\n      {Review.map((Review) => (\r\n        <div className=\"review\">\r\n          <div className=\"review_header\">\r\n            <Avatar />\r\n            <div className=\"review_info\">\r\n              <h2>{Review.UserName}</h2>\r\n              <p>{Review.position}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"review_body\">\r\n            <p>{Review.review}</p>\r\n          </div>\r\n\r\n          <div className=\"review_icons\">\r\n            <ThumbUpAltOutlinedIcon title=\"Like\" className=\"like\" /> Like\r\n            <ChatOutlinedIcon className=\"chat\" /> Comment\r\n            <ShareOutlinedIcon className=\"share\" /> Share\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Review;\r\n","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\Landing\\Landing.js",[],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\SearchResult\\SearchResult.js",["87","88","89","90"],"import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./SearchResult.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\r\nimport firebaseDb from \"../../firebase\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ButtonIncrement from \"./ButtonIncrement\";\r\nimport firestore from \"../../firebase\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nfunction SearchResult() {\r\n  const [Trainschedules, setSchedules] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const ref = firestore.firestore().collection(\"TrainSchdule\");\r\n\r\n  function getSchedules() {\r\n    setLoading(true);\r\n    ref.onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(doc.data());\r\n      });\r\n      setSchedules(items);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  var curr = new Date();\r\n  curr.setDate(curr.getDate() + 0);\r\n  var date = curr.toISOString().substr(0, 10);\r\n  const [BKshow, setBKShow] = useState(false);\r\n\r\n  const BKhandleClose = () => {\r\n    setBKShow(false);\r\n  };\r\n  const BKhandleShow = () => {\r\n    setBKShow(true);\r\n  };\r\n  useEffect(() => {\r\n    getSchedules();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h2>Loading..</h2>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form className=\"SearchResult-Form\">\r\n        <div className=\"input-search-result\">\r\n          <Dropdown placeholder=\"From\" fluid search selection options=\"\" />)\r\n        </div>\r\n        <div className=\"input-search-result\">\r\n          <input placeholder=\"To\" />\r\n        </div>\r\n        <div className=\"DatePicker-Result\">\r\n          <TextField\r\n            type=\"date\"\r\n            id=\"date\"\r\n            label=\"Date\"\r\n            type=\"date\"\r\n            className=\"DatePicker-Result\"\r\n            defaultValue={date}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"next-btn-result\">\r\n          <ArrowForwardIcon className=\"arrow-right-home\" />\r\n        </div>\r\n      </Form>\r\n      <div className=\"row\">\r\n        {Trainschedules.map((TrainSchdule) => (\r\n          <div className=\"row card-wrapper\">\r\n            <div className=\"col-sm-4\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    {\" \"}\r\n                    {TrainSchdule.StartStation} to {TrainSchdule.EndStation}\r\n                  </h5>\r\n                  <p className=\"card-text\">\r\n                    <b>Start Station :</b> {TrainSchdule.StartStation}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>End Station :</b> {TrainSchdule.EndStation}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>Departure Time : </b>\r\n                    {TrainSchdule.DepartureTiime}{\" \"}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>Destination :</b> {TrainSchdule.Destination}{\" \"}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>Arrival at Destination :</b>{\" \"}\r\n                    {TrainSchdule.ArrivalDestination}{\" \"}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>Arrival at End Station :</b>{\" \"}\r\n                    {TrainSchdule.ArrivalEndStation}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>Run By :</b> {TrainSchdule.RunBy}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>Train Name :</b> {TrainSchdule.TrainName}{\" \"}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>Train Number :</b> {TrainSchdule.TrainNumber}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    <b>Train Type :</b> {TrainSchdule.TrainType}{\" \"}\r\n                  </p>\r\n\r\n                  <div className=\"personaltxt\">\r\n                    <Button\r\n                      id=\"PersonalDetails\"\r\n                      size=\"lg\"\r\n                      variant=\"btn btn-success\"\r\n                      onClick={BKhandleShow}\r\n                      className=\"book-now\"\r\n                    >\r\n                      Book Now\r\n                    </Button>\r\n\r\n                    <Modal\r\n                      show={BKshow}\r\n                      onHide={BKhandleClose}\r\n                      centered\r\n                      target=\"PersonalDetails\"\r\n                    >\r\n                      <Modal.Header closeButton>\r\n                        <Modal.Title>Book Now</Modal.Title>\r\n                      </Modal.Header>\r\n                      <Modal.Body>\r\n                        <div className=\"PersonalDetailsModal\">\r\n                          <Form>\r\n                            <Form.Group controlId=\"formBasicName\">\r\n                              <Form.Label>User Name</Form.Label>\r\n                              <Form.Control type=\"UserName\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                              <Form.Label>Email Address</Form.Label>\r\n                              <Form.Control type=\"Email\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                              <Form.Label>Phone Number</Form.Label>\r\n                              <Form.Control type=\"Email\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                              <ButtonIncrement />\r\n                            </Form.Group>\r\n                          </Form>\r\n                        </div>\r\n                      </Modal.Body>\r\n                      <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={BKhandleClose}>\r\n                          Close\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"btn btn-success\"\r\n                          onClick={BKhandleClose}\r\n                        >\r\n                          Book Now\r\n                        </Button>\r\n                      </Modal.Footer>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\Destinations\\Destination.js",["91","92","93"],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\contexts\\AuthContext.js",[],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\firebase.js",[],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\Signin.js",[],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\Signup.js",[],"C:\\Users\\User\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\SearchResult\\ButtonIncrement.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":16,"column":10,"nodeType":"100","messageId":"101","endLine":16,"endColumn":20},{"ruleId":"98","severity":1,"message":"102","line":43,"column":9,"nodeType":"100","messageId":"101","endLine":43,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":89,"column":6,"nodeType":"105","endLine":89,"endColumn":8,"suggestions":"106"},{"ruleId":"98","severity":1,"message":"107","line":9,"column":10,"nodeType":"100","messageId":"101","endLine":9,"endColumn":29},{"ruleId":"98","severity":1,"message":"108","line":9,"column":31,"nodeType":"100","messageId":"101","endLine":9,"endColumn":44},{"ruleId":"98","severity":1,"message":"109","line":9,"column":46,"nodeType":"100","messageId":"101","endLine":9,"endColumn":57},{"ruleId":"103","severity":1,"message":"110","line":29,"column":6,"nodeType":"105","endLine":29,"endColumn":8,"suggestions":"111"},{"ruleId":"98","severity":1,"message":"112","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":25},{"ruleId":"98","severity":1,"message":"113","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"103","severity":1,"message":"114","line":45,"column":6,"nodeType":"105","endLine":45,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":65,"column":13,"nodeType":"118","endLine":65,"endColumn":24},{"ruleId":"98","severity":1,"message":"119","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":14},{"ruleId":"103","severity":1,"message":"120","line":23,"column":6,"nodeType":"105","endLine":23,"endColumn":8,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":32,"column":9,"nodeType":"124","endLine":32,"endColumn":72},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'citiesRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchStations' and 'getSchedules'. Either include them or remove the dependency array.","ArrayExpression",["127"],"'UncontrolledPopover' is defined but never used.","'PopoverHeader' is defined but never used.","'PopoverBody' is defined but never used.","React Hook useEffect has a missing dependency: 'getReview'. Either include it or remove the dependency array.",["128"],"'ArrowDropDownIcon' is defined but never used.","'firebaseDb' is defined but never used.","React Hook useEffect has a missing dependency: 'getSchedules'. Either include it or remove the dependency array.",["129"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getDestination'. Either include it or remove the dependency array.",["130"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [fetchStations, getSchedules]",{"range":"139","text":"140"},"Update the dependencies array to be: [getReview]",{"range":"141","text":"142"},"Update the dependencies array to be: [getSchedules]",{"range":"143","text":"144"},"Update the dependencies array to be: [getDestination]",{"range":"145","text":"146"},[2371,2373],"[fetchStations, getSchedules]",[977,979],"[getReview]",[1384,1386],"[getSchedules]",[591,593],"[getDestination]"]