[{"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\index.js":"1","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\App.js":"2","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\NotFound.js":"3","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\header\\Header.js":"4","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\about\\About.js":"5","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\profile\\Profile.js":"6","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\AuthMain.js":"7","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\PrivateRoute.js":"8","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\review\\Review.js":"9","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\contexts\\AuthContext.js":"10","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\Landing\\Landing.js":"11","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\Destinations\\Destination.js":"12","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\home\\Home.js":"13","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\Signup.js":"14","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\Signin.js":"15","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\firebase.js":"16","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\cart\\Cart.js":"17"},{"size":320,"mtime":1611575109941,"results":"18","hashOfConfig":"19"},{"size":1777,"mtime":1611915263544,"results":"20","hashOfConfig":"19"},{"size":22297,"mtime":1611575109828,"results":"21","hashOfConfig":"19"},{"size":2520,"mtime":1611915263570,"results":"22","hashOfConfig":"19"},{"size":2235,"mtime":1611575109831,"results":"23","hashOfConfig":"19"},{"size":7085,"mtime":1611915263580,"results":"24","hashOfConfig":"19"},{"size":795,"mtime":1611915263559,"results":"25","hashOfConfig":"19"},{"size":455,"mtime":1611915263564,"results":"26","hashOfConfig":"19"},{"size":3059,"mtime":1611915263586,"results":"27","hashOfConfig":"19"},{"size":1039,"mtime":1611575109935,"results":"28","hashOfConfig":"19"},{"size":1115,"mtime":1611915263553,"results":"29","hashOfConfig":"19"},{"size":1015,"mtime":1611823187387,"results":"30","hashOfConfig":"19"},{"size":7654,"mtime":1611838838983,"results":"31","hashOfConfig":"19"},{"size":2322,"mtime":1611575109834,"results":"32","hashOfConfig":"19"},{"size":1889,"mtime":1611575109833,"results":"33","hashOfConfig":"19"},{"size":657,"mtime":1611575109939,"results":"34","hashOfConfig":"19"},{"size":161,"mtime":1611915263565,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"11nrq4s",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\index.js",[],["73","74"],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\App.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\NotFound.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\header\\Header.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\about\\About.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\profile\\Profile.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\AuthMain.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\PrivateRoute.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\review\\Review.js",["75"],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\Landing\\Landing.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\Destinations\\Destination.js",["76","77","78"],"import React, {useState, useEffect} from \"react\";\r\nimport \"./Destination.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firestore from \"../../firebase\";\r\n\r\nfunction Destination() {\r\n  const ref = firestore.firestore().collection(\"destinations\");\r\n  const [destination, setDestination] = useState([]);\r\n\r\n\r\n  function getDestination() {\r\n    ref.onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(doc.data());\r\n      });\r\n      setDestination(items);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDestination();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"row desination-row\">\r\n      {destination.map((destination) => (\r\n      \r\n      <a  href = {destination.destiLink}>\r\n        \r\n        <img className=\"card-wrapper\" src = {destination.destiimage} />\r\n       <div className = \"destination-topic\" >  <h3 >{destination.destiDescription}</h3></div>\r\n       \r\n      </a>\r\n  \r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Destination;\r\n","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\home\\Home.js",["79","80"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Accordion,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  CardColumns,\r\n} from \"react-bootstrap\";\r\nimport firestore from \"../../firebase\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  const [schedules, setSchedules] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [stations, setStations] = useState([]);\r\n\r\n  const searchNameRef = useRef();\r\n\r\n  const [state, toggle] = useState(true);\r\n  const { x } = useSpring({\r\n    from: { x: 0 },\r\n    x: state ? 1 : 0,\r\n    config: { duration: 1000 },\r\n  });\r\n\r\n  const onChange = (dates) => {\r\n    const [start, end] = dates;\r\n    setStartDate(start);\r\n    setEndDate(end);\r\n  };\r\n\r\n  const ref = firestore.firestore().collection(\"TrainSchdule\");\r\n  const Stations = firestore.firestore().collection(\"stations\");\r\n  const citiesRef = firestore.firestore().collection(\"schedules\");\r\n\r\n  async function getSchedules() {\r\n    setLoading(true);\r\n    await ref.limit(6).onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(doc.data());\r\n      });\r\n      console.log(items);\r\n      setSchedules(items);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  async function fetchStations() {\r\n    setLoading(true);\r\n    await Stations.limit(6)\r\n      .orderBy(\"name\")\r\n      .onSnapshot((querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n        });\r\n        setStations(items);\r\n        setLoading(false);\r\n        console.log(items);\r\n      });\r\n  }\r\n\r\n  async function handleSearch(e) {\r\n    await ref\r\n      .where(\"StartStation\", \"==\", searchNameRef.current.value)\r\n      .limit(12)\r\n      .onSnapshot((querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n          items.push(doc.data());\r\n        });\r\n        console.log(items);\r\n        setSchedules(items);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getSchedules();\r\n    fetchStations();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-screen\">\r\n        <h2>Loading Content of Home Page...</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className=\"justify-content-md-center\">\r\n      <h2 className=\"topic mt-4\">Plan Your Journey With Us</h2>\r\n      <div>\r\n        <animated.div\r\n          style={{\r\n            transform: x\r\n              .interpolate({\r\n                range: [0, 0.25, 0.35, 0.45, 0.55, 0.65, 0.75, 1],\r\n                output: [1, 0.97, 0.9, 1, 1.1, 1.03, 1],\r\n              })\r\n              .interpolate((x) => `scale(${x})`),\r\n          }}\r\n        >\r\n          <Accordion className=\"mb-4 mt-4 search\">\r\n            <Card className=\"search\">\r\n              <Accordion.Toggle\r\n                onClick={() => toggle(!state)}\r\n                as={Card.Header}\r\n                eventKey=\"0\"\r\n              >\r\n                <SearchIcon className=\"search_inputIcon\" />{\" \"}\r\n                <b>Let's find you a Train ...</b>\r\n              </Accordion.Toggle>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  <Form onSubmit={handleSearch}>\r\n                    <Row>\r\n                      <Col lg={3} className=\"pl-4\">\r\n                        <Form.Group id=\"date\">\r\n                          <Form.Label>Date:</Form.Label>\r\n                          <br />\r\n                          <DatePicker\r\n                            className=\"datePicker lg-4\"\r\n                            selected={startDate}\r\n                            onChange={onChange}\r\n                            dateFormat=\"dd-MMM-yyyy\"\r\n                            startDate={startDate}\r\n                            endDate={endDate}\r\n                            minDate={new Date()}\r\n                            selectsRange\r\n                            inline\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col\r\n                        lg={9}\r\n                        className=\"justify-content-center center-block\"\r\n                      >\r\n                        <Row>\r\n                          <Col lg={6}>\r\n                            <Form.Group id=\"from\">\r\n                              <Form.Label>From:</Form.Label>\r\n                              <select\r\n                                class=\"form-control\"\r\n                                id=\"fromStationSelect\"\r\n                              >\r\n                                {stations.map((station) => (\r\n                                  <option\r\n                                    key={station.name}\r\n                                    value={station.name}\r\n                                  >\r\n                                    {station.name}\r\n                                  </option>\r\n                                ))}\r\n                              </select>\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col lg={6}>\r\n                            <Form.Group id=\"to\">\r\n                              <Form.Label>To:</Form.Label>\r\n                              <select\r\n                                class=\"form-control\"\r\n                                id=\"fromStationSelect\"\r\n                              >\r\n                                {stations.map((station) => (\r\n                                  <option\r\n                                    key={station.name}\r\n                                    value={station.name}\r\n                                  >\r\n                                    {station.name}\r\n                                  </option>\r\n                                ))}\r\n                              </select>\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        </animated.div>\r\n      </div>\r\n      <div className=\"pt-4\">\r\n        <h2 className=\"train-list\">Available Trains for you</h2>\r\n      </div>\r\n\r\n      <div className=\"justify-content-md-center\">\r\n        <CardColumns>\r\n          {schedules.map((schedule) => (\r\n            <Card\r\n              key={schedule.id}\r\n              className=\"mt-2 hover-shadow-sm bg-white rounded col-md train-schedule\"\r\n            >\r\n              <Card.Body>\r\n                <Card.Title>{schedule.TrainName}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                  {schedule.StartStation} to {schedule.EndStation}\r\n                </Card.Subtitle>\r\n                <Card.Text>\r\n                  Start Time: {schedule.ArrivalStation} hrs\r\n                  <br />\r\n                  End Time: {schedule.ArrivalDestination} hrs\r\n                  <br />\r\n                  Available Classes: {schedule.Classes}\r\n                </Card.Text>\r\n                <Button variant=\"outline-warning\">Reserve Now</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </CardColumns>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\Signup.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\auth\\Signin.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\firebase.js",[],"C:\\Users\\Rashitha\\Documents\\GitHub\\Train-Ticketing-System\\src\\components\\cart\\Cart.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":32,"column":6,"nodeType":"87","endLine":32,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"93","line":23,"column":6,"nodeType":"87","endLine":23,"endColumn":8,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":32,"column":9,"nodeType":"97","endLine":32,"endColumn":72},{"ruleId":"89","severity":1,"message":"98","line":43,"column":9,"nodeType":"91","messageId":"92","endLine":43,"endColumn":18},{"ruleId":"85","severity":1,"message":"99","line":91,"column":6,"nodeType":"87","endLine":91,"endColumn":8,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getReview'. Either include it or remove the dependency array.","ArrayExpression",["103"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getDestination'. Either include it or remove the dependency array.",["104"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'citiesRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchStations' and 'getSchedules'. Either include them or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [getReview]",{"range":"112","text":"113"},"Update the dependencies array to be: [getDestination]",{"range":"114","text":"115"},"Update the dependencies array to be: [fetchStations, getSchedules]",{"range":"116","text":"117"},[1045,1047],"[getReview]",[591,593],"[getDestination]",[2411,2413],"[fetchStations, getSchedules]"]